user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    # the states are kept in a 10 megabyte zone “one”, and an average request processing rate for this zone cannot exceed 1000 request per second.
    limit_req_zone $binary_remote_addr zone=one:10m rate=1000r/s; # 1000r/s, or one request every 0.001 seconds

    proxy_cache_path /tmp/cache keys_zone=cache:10m levels=1:2 inactive=600s 
    max_size=100m;

    upstream api-server {
        server server:3000;
        keepalive 100;
    }

    server {
        listen 80;
        server_name localhost;
        proxy_cache cache;
        proxy_cache_valid 200 1s;
        proxy_cache_use_stale updating; # serve cached content while cache is being updated
        proxy_cache_lock on; # queue up incoming requests while cache is being updated

        location / {
            set            $memcached_key "$uri?$args";
            memcached_pass memcached:11211;
            error_page     404 502 504 = @fallback;
        }

        location @fallback {
            limit_req zone=one burst=100 nodelay;
            limit_req_log_level warn;
            proxy_http_version 1.1;
            proxy_pass http://api-server;
        }

    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    include /etc/nginx/conf.d/*.conf;
}
