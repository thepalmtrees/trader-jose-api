// THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  BigDecimal: string;
  BigInt: string;
  Bytes: string;
};

export type Bar = {
  __typename?: 'Bar';
  decimals: Scalars['Int'];
  id: Scalars['ID'];
  joe: Scalars['Bytes'];
  joeHarvested: Scalars['BigDecimal'];
  joeHarvestedUSD: Scalars['BigDecimal'];
  joeStaked: Scalars['BigDecimal'];
  joeStakedUSD: Scalars['BigDecimal'];
  name: Scalars['String'];
  ratio: Scalars['BigDecimal'];
  symbol: Scalars['String'];
  totalSupply: Scalars['BigDecimal'];
  updatedAt: Scalars['BigInt'];
  users: Array<User>;
  xJoeAge: Scalars['BigDecimal'];
  xJoeAgeDestroyed: Scalars['BigDecimal'];
  xJoeBurned: Scalars['BigDecimal'];
  xJoeMinted: Scalars['BigDecimal'];
};

export type History = {
  __typename?: 'History';
  date: Scalars['Int'];
  id: Scalars['ID'];
  joeHarvested: Scalars['BigDecimal'];
  joeHarvestedUSD: Scalars['BigDecimal'];
  joeStaked: Scalars['BigDecimal'];
  joeStakedUSD: Scalars['BigDecimal'];
  ratio: Scalars['BigDecimal'];
  timeframe: Timeframe;
  xJoeAge: Scalars['BigDecimal'];
  xJoeAgeDestroyed: Scalars['BigDecimal'];
  xJoeBurned: Scalars['BigDecimal'];
  xJoeMinted: Scalars['BigDecimal'];
  xJoeSupply: Scalars['BigDecimal'];
};

export type Query = {
  __typename?: 'Query';
  hello: Scalars['String'];
};

export enum Timeframe {
  Day = 'Day',
}

export type User = {
  __typename?: 'User';
  bar?: Maybe<Bar>;
  id: Scalars['ID'];
  joeHarvested: Scalars['BigDecimal'];
  joeHarvestedUSD: Scalars['BigDecimal'];
  joeIn: Scalars['BigDecimal'];
  joeOffset: Scalars['BigDecimal'];
  joeOut: Scalars['BigDecimal'];
  joeStaked: Scalars['BigDecimal'];
  joeStakedUSD: Scalars['BigDecimal'];
  updatedAt: Scalars['BigInt'];
  usdIn: Scalars['BigDecimal'];
  usdOffset: Scalars['BigDecimal'];
  usdOut: Scalars['BigDecimal'];
  xJoe: Scalars['BigDecimal'];
  xJoeAge: Scalars['BigDecimal'];
  xJoeAgeDestroyed: Scalars['BigDecimal'];
  xJoeBurned: Scalars['BigDecimal'];
  xJoeIn: Scalars['BigDecimal'];
  xJoeMinted: Scalars['BigDecimal'];
  xJoeOffset: Scalars['BigDecimal'];
  xJoeOut: Scalars['BigDecimal'];
};
